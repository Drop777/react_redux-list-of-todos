{"version":3,"sources":["store/index.js","Components/User/User.js","Components/Todoitem/Todoitem.js","Components/Todoslist/Todoslist.js","Components/Todoslist/ConnectedTodoslist.js","Components/App/App.js","Components/App/ConnectedApp.js","index.js"],"names":["initialState","todos","filteredTodos","isLoading","hasError","isLoaded","store","createStore","state","arguments","length","undefined","action","console","log","type","_objectSpread","Object","toConsumableArray","sort","a","b","title","localeCompare","user","name","completed","applyMiddleware","thunk","User","_ref","username","phone","website","address","react_default","createElement","className","city","Todoitem","todo","id","Components_User_User","Todoslist","filteredTodosList","sortByTitle","sortByName","sortByCompleted","onClick","map","Components_Todoitem_Todoitem","key","ConnectedTodoslist","connect","dispatch","App","loadTodosList","_callee","regenerator_default","wrap","_context","prev","next","_this","props","loadTodos","stop","_this$props","this","Fragment","disabled","Todoslist_ConnectedTodoslist","React","Component","ConnectedApp","Promise","all","fetch","then","responses","respons","json","_ref2","slicedToArray","usersDate","item","find","userId","handleSeccess","catch","ReactDOM","render","es","App_ConnectedApp","document","getElementById"],"mappings":"q6BAGA,IAsDMA,EAAe,CACnBC,MAAO,GACPC,cAAe,GACfC,WAAW,EACXC,UAAU,EACVC,UAAU,GAmDGC,EAFDC,YA9CE,WAAkC,IAAjCC,EAAiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAzBT,EAAcY,EAAWH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAEhD,OADAE,QAAQC,IAAIN,EAAMP,OACVW,EAAOG,MACb,IA9DkB,gBA+DhB,OAAAC,EAAA,GACKR,EADL,CAEEL,WAAW,IAEf,IAjEiB,eAkEf,OAAAa,EAAA,GACKR,EADL,CAEEL,WAAW,EACXC,UAAU,IAEd,IAxEmB,iBAyEjB,OAAAY,EAAA,GACKR,EADL,CAEEP,MAAOW,EAAOX,MACdC,cAAeU,EAAOX,MACtBE,WAAW,EACXC,UAAU,EACVC,UAAU,IAEd,IA/EkB,gBAgFhB,OAAAW,EAAA,GACKR,EADL,CAEEN,cAAee,OAAAC,EAAA,EAAAD,CAAIT,EAAMP,OACtBkB,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,MAAOC,cAAcF,EAAEC,WAEhD,IApFiB,eAqFf,OAAAN,EAAA,GACKR,EADL,CAEEN,cAAee,OAAAC,EAAA,EAAAD,CAAIT,EAAMP,OACtBkB,KAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAEI,KAAKC,KAAKF,cAAcF,EAAEG,KAAKC,UAEvD,IAzFsB,oBA0FpB,OAAAT,EAAA,GACKR,EADL,CAEEN,cAAee,OAAAC,EAAA,EAAAD,CAAIT,EAAMP,OACtBkB,KAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEM,UAAYL,EAAEK,WAAa,EAAI,MAExD,QACE,OAAOlB,IAIsBmB,YAAgBC,MCrEpCC,SAtCF,SAAAC,GAAc,IAAXN,EAAWM,EAAXN,KAEZO,EACEP,EADFO,SAAUN,EACRD,EADQC,KAAMO,EACdR,EADcQ,MAAOC,EACrBT,EADqBS,QAASC,EAC9BV,EAD8BU,QAGlC,OACEC,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,QACbF,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,kBACVN,GAEHI,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,cACVZ,GAEHU,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,cACVH,EAAQI,MAEXH,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,eACVL,GAEHG,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,iBACVJ,MCeMM,SAlCE,SAAAT,GAAc,IAAXU,EAAWV,EAAXU,KAEhBd,EACEc,EADFd,UAAWe,EACTD,EADSC,GAAInB,EACbkB,EADalB,MAAOE,EACpBgB,EADoBhB,KAGxB,OACEW,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,aACbF,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,iBAAiBI,GAC9BN,EAAAf,EAAAgB,cAAA,KAAGC,UAAU,oBAAoBf,GACjCa,EAAAf,EAAAgB,cAACM,EAAD,CAAMlB,KAAMA,IACZW,EAAAf,EAAAgB,cAAA,SACGV,EACG,UACA,cC+BGiB,SA5CG,SAAAb,GAAA,IAChBc,EADgBd,EAChBc,kBAAmBvC,EADHyB,EACGzB,SAAUwC,EADbf,EACae,YAAaC,EAD1BhB,EAC0BgB,WAAYC,EADtCjB,EACsCiB,gBADtC,OAGhBZ,EAAAf,EAAAgB,cAAA,WACG/B,GACC8B,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,gBACbF,EAAAf,EAAAgB,cAAA,UACErB,KAAK,SACLiC,QAASH,GAFX,iBAMAV,EAAAf,EAAAgB,cAAA,UACErB,KAAK,SACLiC,QAASF,GAFX,gBAMAX,EAAAf,EAAAgB,cAAA,UACErB,KAAK,SACLiC,QAASD,GAFX,cAQJZ,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,aACZO,EAAkBK,IAAI,SAAAT,GAAI,OAAIL,EAAAf,EAAAgB,cAACc,EAAD,CAAUC,IAAKX,EAAKC,GAAID,KAAMA,UCZpDY,EALYC,YAXH,SAAA7C,GAAK,MAAK,CAChCoC,kBAAmBpC,EAAMN,cACzBG,SAAUG,EAAMH,WAGQ,SAAAiD,GAAQ,MAAK,CACrCT,YAAa,kBAAMS,EJca,CAChCvC,KAhBoB,mBIEpB+B,WAAY,kBAAMQ,EJiBa,CAC/BvC,KAnBmB,kBIEnBgC,gBAAiB,kBAAMO,EJoBa,CACpCvC,KAtBwB,yBIICsC,CAGzBV,GCyCaY,6MAtDbC,mCAAgB,SAAAC,IAAA,OAAAC,EAAAtC,EAAAuC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACRC,EAAKC,MAAMC,YADH,wBAAAL,EAAAM,SAAAT,8EAIP,IAAAU,EACmCC,KAAKJ,MAAvC5D,EADD+D,EACC/D,SAAUC,EADX8D,EACW9D,SAAUF,EADrBgE,EACqBhE,UAC5B,OAAIC,EAEA+B,EAAAf,EAAAgB,cAAAD,EAAAf,EAAAiD,SAAA,KACElC,EAAAf,EAAAgB,cAAA,8BACAD,EAAAf,EAAAgB,cAAA,UACErB,KAAK,SACLsB,UAAU,cACVW,QAASoB,KAAKZ,cACdc,SAAUnE,GAETA,EACG,aACA,SAOVgC,EAAAf,EAAAgB,cAAA,OAAKC,UAAU,OACbF,EAAAf,EAAAgB,cAAA,kCACE/B,GACA8B,EAAAf,EAAAgB,cAAA,UACErB,KAAK,SACLsB,UAAU,cACVW,QAASoB,KAAKZ,cACdc,SAAUnE,GAETA,EACG,aACA,QAGPE,GACC8B,EAAAf,EAAAgB,cAACmC,EAAD,cAzCQC,IAAMC,WCYTC,EAFMrB,YAVG,SAAA7C,GAAK,MAAK,CAChCL,UAAWK,EAAML,UACjBE,SAAUG,EAAMH,SAChBD,SAAUI,EAAMJ,WAGQ,SAAAkD,GAAQ,MAAK,CACrCW,UAAW,kBAAMX,EN2BV,SAACA,GAGN,OAFAA,EA1BwB,CAC1BvC,KARoB,kBAmCX4D,QAAQC,IAAI,CAACC,MAtCP,8CAsCwBA,MArCvB,gDAsCXC,KAAK,SAAAC,GAAS,OAAIJ,QAAQC,IAAIG,EAAU9B,IAAI,SAAA+B,GAAO,OAAIA,EAAQC,YAC/DH,KAAK,SAAAhD,GAA4B,IAAAoD,EAAAjE,OAAAkE,EAAA,EAAAlE,CAAAa,EAAA,GAA1BsD,EAA0BF,EAAA,GAC1BjF,EAD0BiF,EAAA,GACRjC,IAAI,SAAAoC,GAAI,OAAArE,EAAA,GAEzBqE,EAFyB,CAG5B7D,KAAM4D,EAAUE,KAAK,SAAA9D,GAAI,OAAIA,EAAKiB,KAAO4C,EAAKE,aAGlD1E,QAAQC,IAAIb,GACZqD,EAnCc,SAAArD,GAAK,MAAK,CAC9Bc,KAVqB,iBAWrBd,SAiCeuF,CAAcvF,MAExBwF,MAAM,kBAAMnC,EAjCQ,CACzBvC,KAbmB,wBMMAsC,CAA4CE,GCPjEmC,IAASC,OACPxD,EAAAf,EAAAgB,cAACwD,EAAA,EAAD,CAAUtF,MAAOA,GACf6B,EAAAf,EAAAgB,cAACyD,EAAD,OACWC,SAASC,eAAe","file":"static/js/main.fcdacaf2.chunk.js","sourcesContent":["import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\n\nconst USER_API = 'https://jsonplaceholder.typicode.com/users';\nconst TODOS_API = 'https://jsonplaceholder.typicode.com/todos';\n\nconst START_LOADING = 'START_LOADING';\nconst HANDLE_SECCESS = 'HANDLE_SUCCESS';\nconst HANDLE_ERROR = 'HANDLE_ERORR';\nconst SORT_BY_TITLE = 'SORT_BY_TITLE';\nconst SORT_BY_NAME = 'SORT_BY_NAME';\nconst SORT_BY_COMPLETED = 'SORT_BY_COMPLETED';\n\nconst startLoading = () => ({\n  type: START_LOADING,\n});\nconst handleSeccess = todos => ({\n  type: HANDLE_SECCESS,\n  todos,\n});\nconst handleErorr = () => ({\n  type: HANDLE_ERROR,\n});\n\nexport const sortByTitle = () => ({\n  type: SORT_BY_TITLE,\n});\n\nexport const sortByName = () => ({\n  type: SORT_BY_NAME,\n});\n\nexport const sortByCompleted = () => ({\n  type: SORT_BY_COMPLETED,\n});\n\n// eslint-disable-next-line arrow-body-style\nexport const loadTodos = () => {\n  return (dispatch) => {\n    dispatch(startLoading());\n\n    return Promise.all([fetch(USER_API), fetch(TODOS_API)])\n      .then(responses => Promise.all(responses.map(respons => respons.json())))\n      .then(([usersDate, todosDate]) => {\n        const todos = todosDate.map(item => (\n          {\n            ...item,\n            user: usersDate.find(user => user.id === item.userId),\n          }\n        ));\n        console.log(todos);\n        dispatch(handleSeccess(todos));\n      })\n      .catch(() => dispatch(handleErorr()));\n  };\n};\n\nconst initialState = {\n  todos: [],\n  filteredTodos: [],\n  isLoading: false,\n  hasError: false,\n  isLoaded: false,\n};\n\nconst reducer = (state = initialState, action) => {\n  console.log(state.todos);\n  switch (action.type) {\n    case START_LOADING:\n      return {\n        ...state,\n        isLoading: true,\n      };\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoading: false,\n        hasError: true,\n      };\n    case HANDLE_SECCESS:\n      return {\n        ...state,\n        todos: action.todos,\n        filteredTodos: action.todos,\n        isLoading: false,\n        hasError: false,\n        isLoaded: true,\n      };\n    case SORT_BY_TITLE:\n      return {\n        ...state,\n        filteredTodos: [...state.todos]\n          .sort((a, b) => (a.title).localeCompare(b.title)),\n      };\n    case SORT_BY_NAME:\n      return {\n        ...state,\n        filteredTodos: [...state.todos]\n          .sort((a, b) => a.user.name.localeCompare(b.user.name)),\n      };\n    case SORT_BY_COMPLETED:\n      return {\n        ...state,\n        filteredTodos: [...state.todos]\n          .sort((a, b) => (a.completed > b.completed ? -1 : 1)),\n      };\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(reducer, applyMiddleware(thunk));\n\nexport default store;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './User.css';\n\nconst User = ({ user }) => {\n  const {\n    username, name, phone, website, address,\n  } = user;\n\n  return (\n    <div className=\"user\">\n      <p className=\"user__username\">\n        {username}\n      </p>\n      <p className=\"user__name\">\n        {name}\n      </p>\n      <p className=\"user__city\">\n        {address.city}\n      </p>\n      <p className=\"user__phone\">\n        {phone}\n      </p>\n      <p className=\"user__website\">\n        {website}\n      </p>\n    </div>\n  );\n};\n\nUser.propTypes = {\n  user: PropTypes.shape({\n    username: PropTypes.string,\n    name: PropTypes.string,\n    address: PropTypes.shape({\n      city: PropTypes.string,\n    }),\n    phone: PropTypes.string,\n    website: PropTypes.string,\n  }).isRequired,\n};\n\nexport default User;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../User/User';\nimport './Todoitem.css';\n\nconst Todoitem = ({ todo }) => {\n  const {\n    completed, id, title, user,\n  } = todo;\n\n  return (\n    <div className=\"todo-item\">\n      <p className=\"todo-item__id\">{id}</p>\n      <p className=\"todo-item__title\">{title}</p>\n      <User user={user} />\n      <p>\n        {completed\n          ? ' \\u2714'\n          : ' \\u2716'}\n      </p>\n    </div>\n  );\n};\n\nTodoitem.propTypes = {\n  todo: PropTypes.shape({\n    completed: PropTypes.bool,\n    id: PropTypes.number,\n    title: PropTypes.string,\n    user: PropTypes.shape({\n      username: PropTypes.string,\n      name: PropTypes.string,\n      address: PropTypes.shape({\n        city: PropTypes.string,\n      }),\n    }),\n  }),\n}.isRequaired;\n\nexport default Todoitem;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Todoitem from '../Todoitem/Todoitem';\nimport './Todolist.css';\n\nconst Todoslist = ({\n  filteredTodosList, isLoaded, sortByTitle, sortByName, sortByCompleted,\n}) => (\n  <div>\n    {isLoaded && (\n      <div className=\"buttons-sort\">\n        <button\n          type=\"button\"\n          onClick={sortByTitle}\n        >\n        Sort by title\n        </button>\n        <button\n          type=\"button\"\n          onClick={sortByName}\n        >\n        Sort by Name\n        </button>\n        <button\n          type=\"button\"\n          onClick={sortByCompleted}\n        >\n        Completed\n        </button>\n      </div>\n    )}\n    <div className=\"todo-list\">\n      {filteredTodosList.map(todo => <Todoitem key={todo.id} todo={todo} />)}\n    </div>\n  </div>\n);\n\nTodoslist.propTypes = {\n  isLoaded: PropTypes.bool,\n  sortByTitle: PropTypes.func,\n  sortByName: PropTypes.func,\n  sortByCompleted: PropTypes.func,\n  filteredTodosList: PropTypes.arrayOf(PropTypes.shape({\n    userid: PropTypes.number,\n    id: PropTypes.number,\n    tittle: PropTypes.string,\n    complated: PropTypes.bool,\n  })),\n}.isRequired;\nexport default Todoslist;\n","import { connect } from 'react-redux';\nimport { sortByTitle, sortByName, sortByCompleted } from '../../store/index';\nimport Todoslist from './Todoslist';\n\nconst mapStateToProps = state => ({\n  filteredTodosList: state.filteredTodos,\n  isLoaded: state.isLoaded,\n});\n\nconst mapMethodsToProps = dispatch => ({\n  sortByTitle: () => dispatch(sortByTitle()),\n  sortByName: () => dispatch(sortByName()),\n  sortByCompleted: () => dispatch(sortByCompleted()),\n});\n\nconst ConnectedTodoslist = connect(\n  mapStateToProps,\n  mapMethodsToProps\n)(Todoslist);\n\nexport default ConnectedTodoslist;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport ConnectedTodoslist from '../Todoslist/ConnectedTodoslist';\n\nclass App extends React.Component {\n  loadTodosList = async() => {\n    await this.props.loadTodos();\n  }\n\n  render() {\n    const { hasError, isLoaded, isLoading } = this.props;\n    if (hasError) {\n      return (\n        <>\n          <p>Conection problem</p>\n          <button\n            type=\"button\"\n            className=\"button-load\"\n            onClick={this.loadTodosList}\n            disabled={isLoading}\n          >\n            {isLoading\n              ? 'Loading...'\n              : 'Load'}\n          </button>\n        </>\n      );\n    }\n\n    return (\n      <div className=\"App\">\n        <h1>Redux list of todos</h1>\n        {!isLoaded && (\n          <button\n            type=\"button\"\n            className=\"button-load\"\n            onClick={this.loadTodosList}\n            disabled={isLoading}\n          >\n            {isLoading\n              ? 'Loading...'\n              : 'Load'}\n          </button>\n        )}\n        {isLoaded && (\n          <ConnectedTodoslist />\n        )}\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  loadTodos: PropTypes.func,\n  hasError: PropTypes.bool,\n  isLoaded: PropTypes.bool,\n  isLoading: PropTypes.bool,\n}.isRequaired;\n\nexport default App;\n","import { connect } from 'react-redux';\nimport App from './App';\nimport { loadTodos } from '../../store/index';\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  isLoaded: state.isLoaded,\n  hasError: state.hasError,\n});\n\nconst mapMethodsToState = dispatch => ({\n  loadTodos: () => dispatch(loadTodos()),\n});\n\nconst ConnectedApp = connect(mapStateToProps, mapMethodsToState)(App);\n\nexport default ConnectedApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\nimport ConnectedApp from './Components/App/ConnectedApp';\nimport store from './store/index';\n\nReactDOM.render(\n  <Provider store={store}>\n    <ConnectedApp />\n  </Provider>, document.getElementById('root')\n);\n"],"sourceRoot":""}